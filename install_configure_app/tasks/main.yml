---
# tasks file for install_configure_app
 - name: Updating apt
   apt:
    update_cache: yes

 - name: installing git
   apt:
    name: git
    state: present

 - name: installing build-essential
   apt:
    name: build-essential
    state: present

 - name: installing supervisor
   apt:
    name: supervisor
    state: present

 - name: installing python     
   apt:
    name: python     
    state: present

 - name: installing python-dev     
   apt:
    name: python-dev     
    state: present

 - name: installing python-pip     
   apt:
    name: python-pip     
    state: present

 - name: installing python3-pip     
   apt:
    name: python3-pip     
    state: present

 - name: installing libffi-dev     
   apt:
    name: libffi-dev     
    state: present

 - name: installing libssl-dev
   apt:
    name: libssl-dev
    state: present

 - name: Create a pythonapp user. The application will run as this user.
   user:
    name: pythonapp
    home: /home/pythonapp

 - name: installing virtualenv from pip
   pip:
    name: virtualenv 
    state: present

 - name: configure credential helper
   command: "git config --global credential.helper gcloud.sh"

 - name: cloning the repo to /opt/app
   git:
    repo: https://source.developers.google.com/p/gcp-2021-2-bookshelf-dineshs/r/bookshelf_cloud_repo_ansible_new
    dest: /opt/app
 - name: create ve folder
   file:
    name: /opt/app/env
    state: directory
 
 - name: install app dependencies
   become: true
   pip:
     virtualenv: /opt/app/env
     virtualenv_python: python3
     virtualenv_command: virtualenv
     requirements: /opt/app/requirements.txt
     extra_args: "--prefer-binary"
     
 - name: Run python bookshelf/model_cloudsql.py command for database tables
   become: true
   shell: /opt/app/env/bin/python /opt/app/bookshelf/model_cloudsql.py
   register: res

 - name: Getting stdout from the output
   debug:
    var: res.stdout
